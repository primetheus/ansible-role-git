---
## Install the build dependencies
- name: Install dependencies
  become: true
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - make
      - autoconf
      - libcurl4-gnutls-dev
      - gettext
      - zlib1g-dev
      - gcc

## Get the latest release from GitHub, if we chose
## to install the latest version
- name: Get the latest version of Git
  uri:
    url: https://api.github.com/repos/git/git/tags
  register: git_versions_output
  when: git_version == 'latest'
  changed_when: false

- set_fact:
    git_version: "{{ git_versions_output.json[0].name }}"
    git_source_url: "https://api.github.com/repos/git/git/tarball/{{ git_versions_output.json[0].name }}"
  when: git_version == 'latest'

## Create the folder we'll use to extract Git
- name: Create extraction folder
  file:
    path: "/tmp/git-{{ git_version }}"
    state: directory
    mode: 0755

## Extract the Git source
- name: Extract Git
  unarchive:
    src: "{{ git_source_url }}"
    dest: "/tmp/git-{{ git_version }}"
    remote_src: yes
    # Don't create a first-level-folder
    extra_opts: [--strip-components=1]

## Build Git
- name: Build Git from source
  command: make configure
  args:
    chdir: "/tmp/git-{{ git_version }}"

- name: Configure source
  command: "./configure --prefix={{ git_install_dir }} --without-tcltk"
  args:
    chdir: "/tmp/git-{{ git_version }}"

- name: Run make
  command: make all
  args:
    chdir: "/tmp/git-{{ git_version }}"

## Install Git
- name: Install Git from source
  become: true
  command: make install
  args:
    chdir: "/tmp/git-{{ git_version }}"

## Configure the user environment to have the Git path
- name: Configure environment
  become: true
  lineinfile:
    path: /etc/bash.bashrc
    line: "export PATH={{ git_install_dir }}/bin:$PATH"
